plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.freefair.lombok' version '8.6'
}

repositories {
    mavenCentral()
}

allure {
    version.set("2.26.0")
    adapter{
        aspectjWeaver.set(true)
        frameworks{
            junit5{
                adapterVersion.set("2.26.0")
            }
        }
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

var selenideVer = "7.2.1",
    junitVer = "5.10.2",
    slf4jVer = "1.7.32",
    allureVer = "2.26.0",
    assertJVer = "3.23.1",
    restAssuredVer= "5.4.0",
    jacksonVer = "2.16.2"


dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter:$junitVer")
    testImplementation("com.codeborne:selenide:$selenideVer")
    testImplementation("org.slf4j:slf4j-simple:$slf4jVer")
    testImplementation("io.qameta.allure:allure-selenide:$allureVer")
    testImplementation ("io.qameta.allure:allure-junit5:2.26.0")
    testImplementation("io.rest-assured:rest-assured:$restAssuredVer")
    testImplementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVer")
    testImplementation("commons-io:commons-io:2.15.1")

    testImplementation("org.hibernate:hibernate-hikaricp:5.4.32.Final")

    implementation ("org.assertj:assertj-core:$assertJVer")
    implementation("mysql:mysql-connector-java:8.0.33")

}

test {
    useJUnitPlatform()
}

tasks.register("testsWithTags", Test.class) {
    environment("host", System.getProperty("host"))
    String fullTestsTags = System.getProperty("customTags")
    if(fullTestsTags != null) {
        useJUnitPlatform{
            for (String tag : fullTestsTags.split(",")) {
                includeTags.add(tag)
            }
        }
    }

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "full"

        }
    }
}
